多态： 用父类指针指向子类实例
虚函数表被分配在了类的实例中，实现了C++中的虚函数
需函数表保存在实例的内存最前端，保证性能。通过对象实例得到虚函数表，就可以遍历其中的函数指针

一般父类的虚函数都卸载虚函数表的最前端
单继承无覆盖： 子类虚函数添加在最后
单继承有覆盖： 子类的虚函数替换父类的虚函数
多继承无覆盖： 第一父类在最上面一个表，其他父类在其他表中，子类的虚函数添加在第一父类表中
多继承有覆盖： 所有父类的虚函数都被替换为子类的需函数地址


安全问题
父类中的私有成员也可以通过虚函数的地址直接访问，没有属性限制。


C++对象的内存布局

